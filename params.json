{"name":"Trconvert","tagline":"Convert multiple ratio published from Toolkit for CreateJS source","body":"trconvert\r\n=================\r\n\r\nToolkit for CreateJSでパブリッシュしたアニメーション実行ファイルのRatioを変換するコマンドラインツールです。\r\nパブリッシュ後のCanvas操作の座標を任意の倍率に静的に処理するようになっています。node.jsで動きます。\r\n\r\n### install\r\nnodeで動くのでnodeのインストールが必要です。\r\n\r\n\r\n```\r\nnpm install -g trconvert\r\n```\r\n\r\n\r\n### 使い方\r\n```\r\n$ trconvert <file> [options]\r\n  Usage: tfconvert <file> [options]\r\n\r\n  Options:\r\n\r\n    -h, --help           output usage information\r\n    -V, --version        output the version number\r\n    -o, --output         convert output file. If empty, output filename will be replaced [target_file_body]_[ratio*10].js.\r\n    -r, --ratio <ratio>  convert ratio. path caluculated by this rate. ( default 1 )\r\n    -b, --base <base>    convert base ratio (default ratio 2)\r\n```\r\n\r\n##### <file>\r\n変換対象のToolkit for CreateJSで書き出されたJSファイル。\r\n\r\n##### [options]\r\n出力ファイルや変換レートなどの実行時パラメータを渡せます。詳しくは`trconvert -h`としてヘルプを見てください。\r\n\r\n### TODO\r\n* ~~npm installに対応予定~~ done\r\n\r\n### 参照\r\n[https://github.com/ysugimoto/TFCRatioConverter](https://github.com/ysugimoto/TFCRatioConverter) \r\nこちらのロジックをベースに拡張しました。\r\n\r\n### 注意\r\nシェイプのコンパクト化すると、うまく動かない可能性があるので、パブリッシュ時にシェイプのコンパクト化のチェックを外すようにしてください。\r\n\r\n\r\n\r\n### LICENSE\r\n@see [LICENSE](https://github.com/atsumo/trconvert/blob/master/LICENSE)\r\nMIT License.\r\n\r\n[TFCRatioConverter](https://github.com/ysugimoto/TFCRatioConverter) included in this product is MIT License.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}